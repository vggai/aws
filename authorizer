def lambda_handler(event, context):
    token = event['authorizationToken']
    
    # Your custom authorization logic.
    # In this example, we'll allow access if the token is 'allow'
    if token == 'allow':
        effect = 'Allow'
    else:
        effect = 'Deny'

    principal_id = "user|a1b2c3d4"
    tmp = event['methodArn'].split(':')
    api_gateway_arn_tmp = tmp[5].split('/')
    aws_account_id = tmp[4]
    region = tmp[3]
    rest_api_id = api_gateway_arn_tmp[0]
    stage = api_gateway_arn_tmp[1]
    http_method = api_gateway_arn_tmp[2]
    resource = '/' + '/'.join(api_gateway_arn_tmp[3:])

    policy_document = {
        "Version": "2012-10-17",
        "Statement": [
            {
                "Action": "execute-api:Invoke",
                "Effect": effect,
                "Resource": f"arn:aws:execute-api:{region}:{aws_account_id}:{rest_api_id}/{stage}/{http_method}/{resource}"
            }
        ]
    }
    
    response = {
        "principalId": principal_id,
        "policyDocument": policy_document,
        "context": {
            "stringKey": "stringValue",
            "numberKey": 123,
            "booleanKey": True
        }
    }
    
    return response